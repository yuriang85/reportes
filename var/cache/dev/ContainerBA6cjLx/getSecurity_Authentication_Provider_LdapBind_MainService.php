<?php

namespace ContainerBA6cjLx;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Authentication_Provider_LdapBind_MainService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'security.authentication.provider.ldap_bind.main' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-core/Authentication/Provider/AuthenticationProviderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-core/Authentication/Provider/LdapBindAuthenticationProvider.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-core/User/UserCheckerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-core/User/UserChecker.php';

        $container->privates['security.authentication.provider.ldap_bind.main'] = $instance = new \Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider(($container->privates['security.user.provider.concrete.chain_provider'] ?? $container->load('getSecurity_User_Provider_Concrete_ChainProviderService')), ($container->privates['security.user_checker'] ?? ($container->privates['security.user_checker'] = new \Symfony\Component\Security\Core\User\UserChecker())), 'main', ($container->privates['Symfony\\Component\\Ldap\\Ldap'] ?? $container->load('getLdapService')), 'DC=ucm,DC=ltu,DC=sld,DC=cu', true, 'CN=reportes,CN=Users,DC=ucm,DC=ltu,DC=sld,DC=cu', 'Aa123456.*');

        $instance->setQueryString('(sAMAccountName={username})');

        return $instance;
    }
}
